{"version":3,"sources":["bg-image.png","FoodTable/FoodItem.tsx","FoodTable/FoodTable.tsx","FoodTable/FoodTableToolbar.tsx","FoodTable/FoodTableHead.tsx","App.tsx","From.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","FoodItemField","TableOrder","EnhancedTableToolbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLocalSearch","event","setState","searchText","target","value","handleSearch","state","_this$props","numSelected","classes","handleDeleteClick","handleAddClick","react_default","a","createElement","Toolbar_default","className","classNames","root","defineProperty","highlight","title","Typography_default","color","variant","Fragment","id","search","searchIcon","Search_default","InputBase_default","onChange","placeholder","inputRoot","input","inputInput","spacer","actions","Tooltip_default","IconButton_default","aria-label","onClick","Delete_default","AddCircleOutline_default","Component","withStyles","theme","paddingRight","spacing","unit","palette","type","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","position","borderRadius","shape","fade","&:hover","marginRight","marginLeft","width","breakpoints","up","height","pointerEvents","display","alignItems","justifyContent","paddingTop","paddingBottom","paddingLeft","transition","transitions","create","rows","name","numeric","disablePadding","label","calories","fat","carbs","protein","FoodTableHead","createSortHandler","property","onRequestSort","_this2","onSelectAllClick","order","orderBy","rowCount","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","indeterminate","checked","map","row","key","align","sortDirection","placement","enterDelay","TableSortLabel_default","active","direction","Page","FoodTable","createFoodItem","counter","lastItemId","isDisplayed","deleteFoodItem","data","filter","item","selected","forEach","newCounter","toLocaleLowerCase","startsWith","desc","lhs","rhs","tableSort","array","cmp","stabilizedThis","el","index","sort","b","getSorting","handleRequestSort","asc","handleSelectAllClick","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","Number","isSelected","_this$state","emptyRows","Math","min","Paper_default","FoodTableToolbar","tableWrapper","Table_default","table","aria-labelledby","FoodTable_FoodTableHead","TableBody_default","hover","role","aria-checked","tabIndex","component","scope","style","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","margin","minWidth","overflowX","Form","Card_default","card","CardContent_default","gutterBottom","Grid_default","container","xs","sm","TextField_default","required","fullWidth","autoComplete","FormControlLabel_default","control","CardActions_default","Button_default","maxWidth","App","currentPage","List","Create","From","src_FoodTable_FoodTable","@global body","backgroundImage","bgImage","backgroundSize","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7fc7c19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-image.3ad81f51.png\";","export interface IFoodItemState {\r\n\tid: number,\r\n\tname: string,\r\n\tcalories: number,\r\n\tfat: number,\r\n\tcarbs: number,\r\n\tprotein: number,\r\n\tisSelected?: boolean,\r\n\tisDisplayed?: boolean\r\n}\r\n\r\nexport enum FoodItemField {\r\n\tid = \"id\",\r\n\tname = \"name\",\r\n\tcalories = \"calories\",\r\n\tfat = \"fat\",\r\n\tcarbs = \"carbs\",\r\n\tprotein = \"protein\",\r\n}","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport \t{FoodItemField, IFoodItemState} from './FoodItem';\r\nimport FoodTableToolbar from './FoodTableToolbar'\r\nimport FoodTableHead from './FoodTableHead'\r\nimport { promised } from 'q';\r\n\r\ninterface IProps {\r\n\tclasses: any\r\n}\r\ninterface IState {\r\n  order: TableOrder,\r\n\torderBy: FoodItemField,\r\n\tselected: number[],\r\n\tdata: IFoodItemState[],\r\n\tpage: number,\r\n  rowsPerPage: number,\r\n  counter: number,\r\n  lastItemId?: number\r\n}\r\n\r\nenum TableOrder {\r\n\tdesc = \"desc\",\r\n\tasc = \"asc\"\r\n}\r\n\r\nconst tableStyles = (theme: Theme) => ({\r\n  root: {\r\n    width: 'calc(100% - '+theme.spacing.unit * 6+'px)',\r\n    margin: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nclass FoodTable extends Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      order: TableOrder.asc,\r\n      orderBy: FoodItemField.calories,\r\n      selected: [],\r\n      data: [\r\n        { name:'Cupcake',            calories: 305, fat: 3.7,  carbs: 67, protein: 4.3,  id: 1 , isDisplayed: true},\r\n        { name:'Donut',              calories: 452, fat: 25.0, carbs: 51, protein: 4.9,  id: 2 , isDisplayed: true},\r\n        { name:'Eclair',             calories: 262, fat: 16.0, carbs: 24, protein: 6.0,  id: 3 , isDisplayed: true},\r\n        { name:'Frozen yoghurt',     calories: 159, fat: 6.0,  carbs: 24, protein: 4.0,  id: 4 , isDisplayed: true},\r\n        { name:'Gingerbread',        calories: 356, fat: 16.0, carbs: 49, protein: 3.9,  id: 5 , isDisplayed: true},\r\n        { name:'Honeycomb',          calories: 408, fat: 3.2,  carbs: 87, protein: 6.5,  id: 6 , isDisplayed: true},\r\n        { name:'Ice cream sandwich', calories: 237, fat: 9.0,  carbs: 37, protein: 4.3,  id: 7 , isDisplayed: true},\r\n        { name:'Jelly Bean',         calories: 375, fat: 0.0,  carbs: 94, protein: 0.0,  id: 8 , isDisplayed: true},\r\n        { name:'KitKat',             calories: 518, fat: 26.0, carbs: 65, protein: 7.0,  id: 9 , isDisplayed: true},\r\n        { name:'Lollipop',           calories: 392, fat: 0.2,  carbs: 98, protein: 0.0,  id: 10, isDisplayed: true},\r\n        { name:'Marshmallow',        calories: 318, fat: 0,    carbs: 81, protein: 2.0,  id: 11, isDisplayed: true},\r\n        { name:'Nougat',             calories: 360, fat: 19.0, carbs: 9,  protein: 37.0, id: 12, isDisplayed: true},\r\n        { name:'Oreo',               calories: 437, fat: 18.0, carbs: 63, protein: 4.0,  id: 13, isDisplayed: true}\r\n      ],\r\n      page: 0,\r\n      rowsPerPage: 5,\r\n      counter: 0,\r\n    }\r\n  }\r\n\r\n  createFoodItem = (name : string, calories : number, fat : number, carbs : number, protein : number) : IFoodItemState => {\r\n    this.setState(state => ({ \r\n      counter: state.counter + 1,\r\n      lastItemId: state.lastItemId == null ? 0 : state.lastItemId + 1\r\n     }));\r\n    const {counter} = this.state;\r\n    return { id: counter, name, calories, fat, carbs, protein, isDisplayed: true };\r\n  }  \r\n\r\n  deleteFoodItem = (id : number) : void => {\r\n    this.state;\r\n    this.setState(state => {\r\n      const newData = state.data.filter((item) => item.id !== id);\r\n      return {\r\n        data: newData,\r\n        counter: state.counter - 1\r\n      }\r\n    });\r\n  }  \r\n\r\n  handleDeleteClick = () : void => {\r\n    const { selected } = this.state;\r\n    selected.forEach((item) => this.deleteFoodItem(item));\r\n    this.setState({selected: []});\r\n  }  \r\n\r\n  handleAddClick = () : void => {\r\n    //TODO: add dialog box\r\n  }  \r\n  \r\n  handleSearch = (input: string) : void => {\r\n    let newCounter = 0;\r\n    this.state.data.forEach(item => {\r\n      if(input && !item.name.toLocaleLowerCase().startsWith(input.toLocaleLowerCase())) {\r\n        item.isDisplayed = false;\r\n      } else {\r\n        item.isDisplayed = true;\r\n        newCounter++;\r\n      }\r\n    });\r\n    this.setState({ counter: newCounter });\r\n  }  \r\n  \r\n  desc = (lhs: IFoodItemState, rhs: IFoodItemState, orderBy: FoodItemField) => {\r\n    if (rhs[orderBy] < lhs[orderBy]) {\r\n      return -1;\r\n    }\r\n    if (rhs[orderBy] > lhs[orderBy]) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n  \r\n  tableSort = (array : IFoodItemState[], cmp: (lhs: IFoodItemState, rhs: IFoodItemState)=> number): IFoodItemState[] => {\r\n    const stabilizedThis = array.map((el: IFoodItemState, index: number) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = cmp(a[0] as IFoodItemState, b[0] as IFoodItemState);\r\n      if (order !== 0) {\r\n        return order;\r\n      }\r\n      return (a[1] as number) - (b[1] as number);\r\n    });\r\n    return stabilizedThis.map(el => el[0]) as IFoodItemState[];\r\n  }\r\n  \r\n  getSorting = (order: TableOrder, orderBy: FoodItemField) => {\r\n    return order === TableOrder.desc ? \r\n      (a: IFoodItemState, b: IFoodItemState) => this.desc(a, b, orderBy) : \r\n      (a: IFoodItemState, b: IFoodItemState) => -this.desc(a, b, orderBy);\r\n  }\r\n  \r\n\r\n  handleRequestSort = (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, property: FoodItemField) => {\r\n    const orderBy = property;\r\n    let order = TableOrder.desc;\r\n\r\n    if (this.state.orderBy === property && this.state.order === TableOrder.desc) {\r\n      order = TableOrder.asc;\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, id: number) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected: number[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, page: number) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement| HTMLTextAreaElement>) => {\r\n    this.setState({ rowsPerPage: Number(event.target.value) });\r\n  };\r\n\r\n  isSelected = (id: number) => this.state.selected.indexOf(id) !== -1;\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <FoodTableToolbar \r\n          numSelected={selected.length} \r\n          handleDeleteClick={this.handleDeleteClick}\r\n          handleAddClick={this.handleAddClick}\r\n          handleSearch={this.handleSearch}\r\n        />\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <FoodTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {this.tableSort(data, this.getSorting(order, orderBy))\r\n                .filter(item => item.isDisplayed === true)\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {n.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{n.calories}</TableCell>\r\n                      <TableCell align=\"right\">{n.fat}</TableCell>\r\n                      <TableCell align=\"right\">{n.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{n.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.filter(item => item.isDisplayed).length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n//@ts-ignore\r\nexport default withStyles(tableStyles)(FoodTable);","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport { withStyles, Theme } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\n\r\ninterface IProps {\r\n\tnumSelected: number,\r\n\tclasses: any,\r\n\thandleDeleteClick: () => void,\r\n\thandleAddClick: () => void,\r\n\thandleSearch: (input: string) => void,\r\n}\r\n\r\ninterface IState {\r\n\tsearchText: string\r\n}\r\n\r\nconst toolbarStyles = (theme : Theme) => ({\r\n\troot: {\r\n\t  paddingRight: theme.spacing.unit,\r\n\t},\r\n\thighlight:\r\n\t  theme.palette.type === 'light'\r\n\t\t? {\r\n\t\t\tcolor: theme.palette.secondary.main,\r\n\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n\t\t  }\r\n\t\t: {\r\n\t\t\tcolor: theme.palette.text.primary,\r\n\t\t\tbackgroundColor: theme.palette.secondary.dark,\r\n\t\t  },\r\n\tspacer: {\r\n\t  flex: '1 1 100%',\r\n\t},\r\n\tactions: {\r\n\t  color: theme.palette.text.secondary,\r\n\t},\r\n\ttitle: {\r\n\t  flex: '0 0 auto',\r\n\t},\r\n\tsearch: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.primary.main, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.25),\r\n    },\r\n    marginRight: theme.spacing.unit * 2,\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing.unit * 3,\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing.unit * 9,\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    width: '100%',\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    paddingBottom: theme.spacing.unit,\r\n    paddingLeft: theme.spacing.unit * 10,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n});\r\n  \r\nclass EnhancedTableToolbar extends Component<IProps, IState> {\r\n\tconstructor(props: IProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchText: ''\r\n\t\t}\r\n\t}\r\n\r\n\thandleLocalSearch = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n\t\tthis.setState({searchText: event.target.value});\r\n\t\tthis.props.handleSearch(event.target.value);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { numSelected, classes, handleDeleteClick, handleAddClick, handleSearch} = this.props;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<Toolbar\r\n\t\t\tclassName={classNames(classes.root, {\r\n\t\t\t\t[classes.highlight]: numSelected > 0,\r\n\t\t\t})}\r\n\t\t\t>\r\n\t\t\t\t{numSelected > 0 ? (\r\n\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t<Typography color=\"inherit\" variant=\"subtitle1\">\r\n\t\t\t\t\t\t{numSelected} selected\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<div className={classes.title}>\r\n\t\t\t\t\t\t<Typography variant=\"h6\" id=\"tableTitle\">\r\n\t\t\t\t\t\t\tDeserts\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={classes.search}>\r\n\t\t\t\t\t\t<div className={classes.searchIcon}>\r\n\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<InputBase \r\n\t\t\t\t\t\t\tvalue = {this.state.searchText}\r\n\t\t\t\t\t\t\tonChange = {this.handleLocalSearch}\r\n\t\t\t\t\t\t\tplaceholder=\"Search…\"\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\troot: classes.inputRoot,\r\n\t\t\t\t\t\t\t\tinput: classes.inputInput,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t<div className={classes.spacer} />\r\n\t\t\t<div className={classes.actions}>\r\n\t\t\t\t{numSelected > 0 ? (\r\n\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\taria-label=\"Delete\"\r\n\t\t\t\t\t\tonClick={ (event) => handleDeleteClick() }\r\n\t\t\t\t\t>\r\n\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t) : (\r\n\t\t\t\t<Tooltip title=\"Add item\">\r\n\t\t\t\t\t<IconButton \r\n\t\t\t\t\t\taria-label=\"Add item\"\r\n\t\t\t\t\t\tonClick={ (event) => handleAddClick() }\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</Tooltip>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t</Toolbar>\r\n\t\t);\r\n\t}\r\n};\r\n\r\n//@ts-ignore\r\nexport default withStyles(toolbarStyles)(EnhancedTableToolbar);","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {FoodItemField} from './FoodItem';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst rows = [\r\n  { id: FoodItemField.name, \t\tnumeric: false, disablePadding: true, \tlabel: 'Dessert (100g serving)' },\r\n  { id: FoodItemField.calories, numeric: true, \tdisablePadding: false, \tlabel: 'Calories' },\r\n  { id: FoodItemField.fat, \t\t\tnumeric: true, \tdisablePadding: false, \tlabel: 'Fat (g)' },\r\n  { id: FoodItemField.carbs, \t\tnumeric: true, \tdisablePadding: false, \tlabel: 'Carbs (g)' },\r\n  { id: FoodItemField.protein, \tnumeric: true, \tdisablePadding: false, \tlabel: 'Protein (g)' },\r\n];\r\n\r\ninterface IProps {\r\n  numSelected: number,\r\n  onRequestSort: (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, property: FoodItemField) => void,\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void,\r\n  order?: 'desc' | 'asc',\r\n  orderBy: string,\r\n\trowCount: number\r\n}\r\n\r\nclass FoodTableHead extends Component<IProps> {\r\n  createSortHandler = (property : FoodItemField) => (event : React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodTableHead;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { withStyles, Theme } from '@material-ui/core/styles';\nimport FoodTable from './FoodTable/FoodTable';\nimport Form from './From';\nimport bgImage from './bg-image.png';\n\nconst appStyles = (theme: Theme) => ({\n  '@global body': {\n    backgroundImage: `url(${bgImage})`,\n    backgroundSize: '400px'\n  }\n});\n\nenum Page {\n  List,\n  Create\n}\n\ninterface IState {  \n  currentPage: Page\n}\n\nclass App extends Component<{}, IState> {\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      currentPage: Page.List\n    }\n  }\n  render() {\n    let content: JSX.Element;\n    switch (this.state.currentPage) {\n      case Page.Create:\n        return (<Form/>);\n      default:\n        return (<FoodTable/>);\n    }\n  }\n}\n\nexport default withStyles(appStyles)(App);\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = (theme : any)  => ({\r\n    card: {\r\n      maxWidth: 800,\r\n    },\r\n    actions: {\r\n      display: 'flex',\r\n    }\r\n  });\r\n  \r\n\r\nclass Form extends Component {\r\n    constructor(props : Readonly<{}>) {\r\n        super(props);\r\n    }\r\n    render(){\r\n        // @ts-ignore\r\n        const { classes } = this.props;\r\n        return (\r\n            <Card className={classes.card}>            \r\n                <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                    Shipping address\r\n                    </Typography>\r\n                    <Grid container spacing={24}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                        required\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        label=\"First name\"\r\n                        fullWidth\r\n                        autoComplete=\"fname\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                        required\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        label=\"Last name\"\r\n                        fullWidth\r\n                        autoComplete=\"lname\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        required\r\n                        id=\"address1\"\r\n                        name=\"address1\"\r\n                        label=\"Address line 1\"\r\n                        fullWidth\r\n                        autoComplete=\"billing address-line1\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                        id=\"address2\"\r\n                        name=\"address2\"\r\n                        label=\"Address line 2\"\r\n                        fullWidth\r\n                        autoComplete=\"billing address-line2\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                        required\r\n                        id=\"city\"\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        fullWidth\r\n                        autoComplete=\"billing address-level2\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\" fullWidth />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                        required\r\n                        id=\"zip\"\r\n                        name=\"zip\"\r\n                        label=\"Zip / Postal code\"\r\n                        fullWidth\r\n                        autoComplete=\"billing postal-code\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                        required\r\n                        id=\"country\"\r\n                        name=\"country\"\r\n                        label=\"Country\"\r\n                        fullWidth\r\n                        autoComplete=\"billing country\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <FormControlLabel\r\n                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />}\r\n                        label=\"Use this address for payment details\"\r\n                        />\r\n                    </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions className={classes.actions}>\r\n                    <Button>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button>\r\n                        Submit\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withStyles(styles)(Form);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}