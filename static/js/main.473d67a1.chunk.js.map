{"version":3,"sources":["FoodTable/FoodItem.tsx","FoodTable/FoodTable.tsx","FoodTable/FoodTableToolbar.tsx","FoodTable/FoodTableHead.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FoodItemField","FoodItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","id","name","calories","fat","carbs","protein","isSelected","_this2","react_default","a","createElement","TableRow_default","hover","onClick","event","handleClick","role","aria-checked","tabIndex","key","selected","TableCell_default","padding","Checkbox_default","checked","component","scope","align","Component","defaultProps","TableOrder","withStyles","theme","root","paddingRight","spacing","unit","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","spacer","flex","actions","title","numSelected","classes","Toolbar_default","className","classNames","defineProperty","Typography_default","variant","Tooltip_default","IconButton_default","aria-label","Delete_default","FilterList_default","rows","numeric","disablePadding","label","FoodTableHead","createSortHandler","property","onRequestSort","_this$props","onSelectAllClick","order","orderBy","rowCount","TableHead_default","indeterminate","onChange","map","row","sortDirection","placement","enterDelay","TableSortLabel_default","active","direction","counter","createFoodItem","desc","lhs","rhs","FoodTable","asc","data","page","rowsPerPage","handleRequestSort","setState","handleSelectAllClick","target","n","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","Number","value","_this$state","emptyRows","Math","min","Paper_default","FoodTableToolbar","tableWrapper","Table_default","table","aria-labelledby","FoodTable_FoodTableHead","TableBody_default","array","cmp","stabilizedThis","el","index","sort","b","stableSort","getSorting","style","height","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","width","margin","minWidth","overflowX","App","src_FoodTable_FoodTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.473d67a1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport interface IFoodItemState {\r\n\tid: number,\r\n\tname: string,\r\n\tcalories: number,\r\n\tfat: number,\r\n\tcarbs: number,\r\n\tprotein: number,\r\n\tisSelected?: boolean\r\n}\r\n\r\ninterface IFoodItemProps {\r\n\tid: number,\r\n\tname: string,\r\n\tcalories: number,\r\n\tfat: number,\r\n\tcarbs: number,\r\n\tprotein: number,\r\n\tisSelected: boolean,\r\n\thandleClick: (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, id: number) => any \r\n}\r\n\r\nexport enum FoodItemField {\r\n\tid = \"id\",\r\n\tname = \"name\",\r\n\tcalories = \"calories\",\r\n\tfat = \"fat\",\r\n\tcarbs = \"carbs\",\r\n\tprotein = \"protein\",\r\n}\r\n\r\n\r\nclass FoodItem extends Component<IFoodItemProps, IFoodItemState> {\r\n\tconstructor(props : Readonly<IFoodItemProps>) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\tid: props.id, \r\n\t\t\tname: props.name, \r\n\t\t\tcalories: props.calories, \r\n\t\t\tfat: props.fat, \r\n\t\t\tcarbs: props.carbs, \r\n\t\t\tprotein: props.protein,\r\n\t\t\tisSelected: false\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tid: 0, \r\n\t\tname: '', \r\n\t\tcalories : 0, \r\n\t\tfat: 0, \r\n\t\tcarbs: 0, \r\n\t\tprotein: 0,\r\n\t\tisSelected: false,\r\n\t\thandleClick: (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, id: number) => {}\r\n\t  }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<TableRow\r\n\t\t\t\thover\r\n\t\t\t\tonClick={event => this.props.handleClick(event, this.state.id)}\r\n\t\t\t\trole=\"checkbox\"\r\n\t\t\t\taria-checked={this.state.isSelected}\r\n\t\t\t\ttabIndex={-1}\r\n\t\t\t\tkey={this.state.id}\r\n\t\t\t\tselected={this.state.isSelected}\r\n\t\t\t>\r\n\t\t\t\t<TableCell padding=\"checkbox\">\r\n\t\t\t\t<Checkbox checked={this.state.isSelected} />\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n\t\t\t\t{this.state.name}\r\n\t\t\t\t</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">{this.state.calories}</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">{this.state.fat}</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">{this.state.carbs}</TableCell>\r\n\t\t\t\t<TableCell align=\"right\">{this.state.protein}</TableCell>\r\n\t\t\t</TableRow>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default FoodItem;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport \t{FoodItemField, IFoodItemState} from './FoodItem';\r\nimport FoodTableToolbar from './FoodTableToolbar'\r\nimport FoodTableHead from './FoodTableHead'\r\n\r\nlet counter = 0;\r\nfunction createFoodItem(name : string, calories : number, fat : number, carbs : number, protein : number) : IFoodItemState {\r\n  counter += 1;\r\n  return { id: counter, name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(lhs: IFoodItemState, rhs: IFoodItemState, orderBy: FoodItemField) {\r\n  if (rhs[orderBy] < lhs[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (rhs[orderBy] > lhs[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array : IFoodItemState[], cmp: (lhs: IFoodItemState, rhs: IFoodItemState)=> number): IFoodItemState[] {\r\n  const stabilizedThis = array.map((el: IFoodItemState, index: number) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0] as IFoodItemState, b[0] as IFoodItemState);\r\n\t\tif (order !== 0) {\r\n\t\t\treturn order;\r\n\t\t}\r\n    return (a[1] as number) - (b[1] as number);\r\n  });\r\n  return stabilizedThis.map(el => el[0]) as IFoodItemState[];\r\n}\r\n\r\nfunction getSorting(order: TableOrder, orderBy: FoodItemField) {\r\n  return order === TableOrder.desc ? (a: IFoodItemState, b: IFoodItemState) => desc(a, b, orderBy) : (a: IFoodItemState, b: IFoodItemState) => -desc(a, b, orderBy);\r\n}\r\n\r\ninterface IProps {\r\n\tclasses: any\r\n}\r\ninterface IState {\r\n  order: TableOrder,\r\n\torderBy: FoodItemField,\r\n\tselected: number[],\r\n\tdata: IFoodItemState[],\r\n\tpage: number,\r\n\trowsPerPage: number,\r\n}\r\n\r\nenum TableOrder {\r\n\tdesc = \"desc\",\r\n\tasc = \"asc\"\r\n}\r\n\r\nconst tableStyles = (theme : any) => ({\r\n  root: {\r\n    width: 'calc(100% - '+theme.spacing.unit * 6+'px)',\r\n    margin: theme.spacing.unit * 3,\r\n  },\r\n  table: {\r\n    minWidth: 1020,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n});\r\n\r\nclass FoodTable extends Component<IProps, IState> {\r\n  state: IState = {\r\n    order: TableOrder.asc,\r\n    orderBy: FoodItemField.calories,\r\n    selected: [],\r\n    data: [\r\n      createFoodItem('Cupcake', 305, 3.7, 67, 4.3),\r\n      createFoodItem('Donut', 452, 25.0, 51, 4.9),\r\n      createFoodItem('Eclair', 262, 16.0, 24, 6.0),\r\n      createFoodItem('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n      createFoodItem('Gingerbread', 356, 16.0, 49, 3.9),\r\n      createFoodItem('Honeycomb', 408, 3.2, 87, 6.5),\r\n      createFoodItem('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n      createFoodItem('Jelly Bean', 375, 0.0, 94, 0.0),\r\n      createFoodItem('KitKat', 518, 26.0, 65, 7.0),\r\n      createFoodItem('Lollipop', 392, 0.2, 98, 0.0),\r\n      createFoodItem('Marshmallow', 318, 0, 81, 2.0),\r\n      createFoodItem('Nougat', 360, 19.0, 9, 37.0),\r\n      createFoodItem('Oreo', 437, 18.0, 63, 4.0),\r\n    ],\r\n    page: 0,\r\n    rowsPerPage: 5,\r\n  };\r\n\r\n  handleRequestSort = (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, property: FoodItemField) => {\r\n    const orderBy = property;\r\n    let order = TableOrder.desc;\r\n\r\n    if (this.state.orderBy === property && this.state.order === TableOrder.desc) {\r\n      order = TableOrder.asc;\r\n    }\r\n\r\n    this.setState({ order, orderBy });\r\n  };\r\n\r\n  handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, id: number) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected: Array<number> = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, page: number) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement| HTMLTextAreaElement>) => {\r\n    this.setState({ rowsPerPage: Number(event.target.value) });\r\n  };\r\n\r\n  isSelected = (id: number) => this.state.selected.indexOf(id) !== -1;\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <FoodTableToolbar numSelected={selected.length} />\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n            <FoodTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={this.handleSelectAllClick}\r\n              onRequestSort={this.handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(data, getSorting(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map(n => {\r\n                  const isSelected = this.isSelected(n.id);\r\n                  return (\r\n\t\t\t\t\t\t\t\t\t\t<TableRow\r\n                      hover\r\n                      onClick={event => this.handleClick(event, n.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isSelected}\r\n                      tabIndex={-1}\r\n                      key={n.id}\r\n                      selected={isSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox checked={isSelected} />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        {n.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{n.calories}</TableCell>\r\n                      <TableCell align=\"right\">{n.fat}</TableCell>\r\n                      <TableCell align=\"right\">{n.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{n.protein}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 49 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\n//@ts-ignore\r\nexport default withStyles(tableStyles)(FoodTable);","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\r\n\r\n\r\ninterface IProps {\r\n\tnumSelected: number,\r\n\tclasses: any\r\n}\r\n\r\nconst toolbarStyles = (theme : any) => ({\r\n\troot: {\r\n\t  paddingRight: theme.spacing.unit,\r\n\t},\r\n\thighlight:\r\n\t  theme.palette.type === 'light'\r\n\t\t? {\r\n\t\t\tcolor: theme.palette.secondary.main,\r\n\t\t\tbackgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n\t\t  }\r\n\t\t: {\r\n\t\t\tcolor: theme.palette.text.primary,\r\n\t\t\tbackgroundColor: theme.palette.secondary.dark,\r\n\t\t  },\r\n\tspacer: {\r\n\t  flex: '1 1 100%',\r\n\t},\r\n\tactions: {\r\n\t  color: theme.palette.text.secondary,\r\n\t},\r\n\ttitle: {\r\n\t  flex: '0 0 auto',\r\n\t},\r\n});\r\n  \r\nlet EnhancedTableToolbar = (props: IProps) => {\r\n\tconst { numSelected, classes } = props;\r\n  \r\n\treturn (\r\n\t  <Toolbar\r\n\t\tclassName={classNames(classes.root, {\r\n\t\t  [classes.highlight]: numSelected > 0,\r\n\t\t})}\r\n\t  >\r\n\t\t<div className={classes.title}>\r\n\t\t  {numSelected > 0 ? (\r\n\t\t\t<Typography color=\"inherit\" variant=\"subtitle1\">\r\n\t\t\t  {numSelected} selected\r\n\t\t\t</Typography>\r\n\t\t  ) : (\r\n\t\t\t<Typography variant=\"h6\" id=\"tableTitle\">\r\n\t\t\t  Nutrition\r\n\t\t\t</Typography>\r\n\t\t  )}\r\n\t\t</div>\r\n\t\t<div className={classes.spacer} />\r\n\t\t<div className={classes.actions}>\r\n\t\t  {numSelected > 0 ? (\r\n\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t  <IconButton aria-label=\"Delete\">\r\n\t\t\t\t<DeleteIcon />\r\n\t\t\t  </IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t  ) : (\r\n\t\t\t<Tooltip title=\"Filter list\">\r\n\t\t\t  <IconButton aria-label=\"Filter list\">\r\n\t\t\t\t<FilterListIcon />\r\n\t\t\t  </IconButton>\r\n\t\t\t</Tooltip>\r\n\t\t  )}\r\n\t\t</div>\r\n\t  </Toolbar>\r\n\t);\r\n};\r\n\r\n  \r\nexport default withStyles(toolbarStyles)(EnhancedTableToolbar);","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport FoodItem, {FoodItemField} from './FoodItem';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nconst rows = [\r\n  { id: FoodItemField.name, \t\tnumeric: false, disablePadding: true, \tlabel: 'Dessert (100g serving)' },\r\n  { id: FoodItemField.calories, numeric: true, \tdisablePadding: false, \tlabel: 'Calories' },\r\n  { id: FoodItemField.fat, \t\t\tnumeric: true, \tdisablePadding: false, \tlabel: 'Fat (g)' },\r\n  { id: FoodItemField.carbs, \t\tnumeric: true, \tdisablePadding: false, \tlabel: 'Carbs (g)' },\r\n  { id: FoodItemField.protein, \tnumeric: true, \tdisablePadding: false, \tlabel: 'Protein (g)' },\r\n];\r\n\r\ninterface IProps {\r\n  numSelected: number,\r\n  onRequestSort: (event: React.MouseEvent<HTMLTableRowElement, MouseEvent>, property: FoodItemField) => void,\r\n  onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void,\r\n  order?: 'desc' | 'asc',\r\n  orderBy: string,\r\n\trowCount: number\r\n}\r\n\r\nclass FoodTableHead extends Component<IProps> {\r\n  createSortHandler = (property : FoodItemField) => (event : React.MouseEvent<HTMLTableRowElement, MouseEvent>) => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? 'right' : 'left'}\r\n                padding={row.disablePadding ? 'none' : 'default'}\r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this,\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FoodTableHead;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Form from './From';\nimport FoodTable from './FoodTable/FoodTable';\n\nclass App extends Component {\n  render() {\n    return (\n      <FoodTable/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}